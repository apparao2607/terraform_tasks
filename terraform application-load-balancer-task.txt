terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 5.0"
    }
  }
}




provider "aws" {
  region     = "us-east-1"
  profile = "san"
}


resource "aws_launch_template" "mine_temp" {
  name          = "new-project-launch-template"
  image_id      = "ami-018ba43095ff50d08" 

  instance_type = "t2.micro"
  key_name = "nv-k"

  user_data = base64encode(<<EOF
#!/bin/bash
echo "hello this is Terraform page" > /var/www/html/index.html
yum install -y httpd
systemctl start httpd
systemctl enable httpd
EOF
  )
}

output "instance_type" {
  value = aws_launch_template.mine_temp.instance_type
}

output "user_data" {
  value = aws_launch_template.mine_temp.user_data
}

#########     AUTO-SCALING-GROUP   ###########


resource "aws_autoscaling_group" "mine_temp" {
  name                      = "project-asg"
  max_size                  = 3
  min_size                  = 1
  desired_capacity          = 1

  launch_template {
  id      = aws_launch_template.mine_temp.id
  version = "${aws_launch_template.mine_temp.latest_version}"  # Corrected line
}


  target_group_arns = [aws_lb_target_group.mine_temp.arn]  # Corrected line

  vpc_zone_identifier       = ["subnet-04d85e73ef2fde4f6", "subnet-023bfc126230ce8f4"]

  tag {
    key                 = "lorem"
    value               = "ipsum"
    propagate_at_launch = false
  }
}


###########    Target Group  ###########

resource "aws_lb_target_group" "mine_temp" {
  name     = "project-tg"
  port     = 80
  protocol = "HTTP"
  vpc_id = "vpc-0461fb86f6cae8f4a"
}


########### APPLICATION LB #########
resource "aws_lb" "mine_temp" {
  name               = "project-lb"
  internal           = false
  load_balancer_type = "application"
  subnets            = ["subnet-04d85e73ef2fde4f6", "subnet-023bfc126230ce8f4"]

    tags = {
    Environment = "dev"
  }
}


resource "aws_lb_listener" "mine_temp" {
  load_balancer_arn = aws_lb.mine_temp.arn
  port              = "80"
  protocol          = "HTTP"

  default_action {
    type             = "forward"
    target_group_arn = aws_lb_target_group.mine_temp.arn
  }
}